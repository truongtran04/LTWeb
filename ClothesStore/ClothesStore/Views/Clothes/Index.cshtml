@model IEnumerable<ClothesStore.Models.ViewModels.ClothesViewModel>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutHome.cshtml";
}

@section header{
    <style>
        /* Set the initial display of sizes div to hidden */
        .toggle-div {
            display: none;
        }
        /* Add transition effects */
        .hover-overlay {
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .card-body:hover .hover-overlay {
            opacity: 1;
        }

        div.hover-div {
            background-color: rgb(239, 235, 235);
            position: relative;
            text-decoration: none; /* Loại bỏ underline mặc định */
            color: black;
        }

        div.hover-div::after {
            content: '';
            opacity: 0;
            height: 4px; /* Độ dày của underline */
            width: 0; /* Bắt đầu với width = 0, để tăng dần khi hover */
            background-color: red; /* Màu underline */
            border-radius: 3px;
            position: absolute;
            left: 50%; /* Căn giữa */
            bottom: 0px; /* Đặt underline ngay dưới chữ */
            transform: translateX(-50%);
            transition: all 0.3s ease; /* Hiệu ứng mượt */
        }

        div.hover-div:hover {
            background-color: white;
        }

            div.hover-div:hover::after {
                opacity: 1;
                width: 20%; /* Khi hover, underline sẽ bao phủ toàn bộ */
            }
    </style>

}
@section footer{
    <script>
        function changeImageAndSizes(colorInput, clothesId) {
            // Update the main image based on the selected color
            const newImageSrc = colorInput.getAttribute('data-img-url');
            document.getElementById('mainImage_' + clothesId).src = newImageSrc;

            // Get the selected color ID from the clicked color input
            const selectedColor = colorInput.getAttribute('data-color-id');

            // Target the size container for the current item
            const sizeContainer = document.getElementById('sizeContainer_' + clothesId);

            // Loop through each size option and toggle visibility based on color match
            Array.from(sizeContainer.getElementsByClassName('size-option')).forEach(function (sizeDiv) {
                if (sizeDiv.getAttribute('data-color') === selectedColor) {
                    sizeDiv.style.display = 'block';  // Show matching sizes
                } else {
                    sizeDiv.style.display = 'none';   // Hide non-matching sizes
                }
            });
        }

        // Function to toggle display for the size options
        function toggleDiv(element) {
            const insertDiv = element.closest('.card-body').querySelector('.insert');
            const sizesDiv = element.closest('.card-body').querySelector('.sizes');
            // Hide insert div and show sizes div
            insertDiv.style.display = 'none';
            sizesDiv.style.display = 'block';
        }

        // Hide sizes and show insert div when mouse leaves
        function hideSizes(element) {
            const insertDiv = element.querySelector('.insert');
            const sizesDiv = element.querySelector('.sizes');
            sizesDiv.style.display = 'none';
            insertDiv.style.display = 'block';
        }
    </script>
}

<div>
    <!--Start Slide-->
    <div id="carouselSlide" class="carousel slide" data-bs-ride="carousel">
        <div class="carousel-indicators">
            <button type="button" data-bs-target="#carouselSlide" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
            <button type="button" data-bs-target="#carouselSlide" data-bs-slide-to="1" aria-label="Slide 2"></button>
            <button type="button" data-bs-target="#carouselSlide" data-bs-slide-to="2" aria-label="Slide 3"></button>
        </div>
        <div class="carousel-inner">
            <div class="carousel-item active">
                <img src="~/Content/images/banner/slide/slide_1.png" class="d-block w-100" alt="Slide 1" />
            </div>
            <div class="carousel-item">
                <img src="~/Content/images/banner/slide/slide_2.png" class="d-block w-100" alt="Slide 2" />
            </div>
            <div class="carousel-item">
                <img src="~/Content/images/banner/slide/slide_3.png" class="d-block w-100" alt="Slide 3" />
            </div>
        </div>
        <button class="carousel-control-prev" type="button" data-bs-target="#carouselSlide" data-bs-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Previous</span>
        </button>
        <button class="carousel-control-next" type="button" data-bs-target="#carouselSlide" data-bs-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Next</span>
        </button>
    </div>
    <!--End Slide-->
    <!--Category-->
    <div class="container mt-5">
        <div class="container-fluid">
            <div class="d-flex flex-row justify-content-between">
                <div href="#" class="p-2 w-100 text-center m-2 hover-div" onclick="GetClothesAll('@Model.First().ClothesItem.ClothingTypeID')">
                    <span class="fw-bold" style="text-transform: uppercase; font-size: 18px">Tất cả</span>
                </div>
                @foreach (var item in ViewBag.Category)
                {
                    <div href="#" class="p-2 w-100 text-center m-2 hover-div" onclick="GetClothesCate('@item.CategoryID', '@Model.First().ClothesItem.ClothingTypeID')">
                        <span class="fw-bold" style="text-transform: uppercase; font-size: 18px">@item.CategoryName</span>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="container mt-5">
        <div class="container-fluid">
            <div id="clothesCate" class="row">
                @foreach (var item in Model)
                {
                    <div class="col-3 mt-3 mb-3">
                        <div class="card border-0">
                            <div class="card-body p-0 position-relative" onmouseleave="hideSizes(this)">
                                <!-- Main image -->
                                <a href="#">
                                    <img id="mainImage_@item.ClothesItem.ClothesID" class="mainImage img-fluid rounded" src="@item.ClothesItem.UrlImage" alt="Product Image" onmouseenter="showInsert(this)">
                                </a>
                                <!-- Insert div -->
                                <div class="insert bg-light text-center p-2 position-absolute bottom-0 start-50 translate-middle-x mb-3 rounded btn btn-light border-0 hover-overlay" style="width: 90%;" onclick="toggleDiv(this)">
                                    Thêm vào giỏ hàng
                                </div>
                                <!-- Sizes div -->
                                <div class="sizes bg-light text-center p-2 position-absolute bottom-0 start-50 translate-middle-x mb-3 rounded toggle-div" style="width: 90%; display: none;">
                                    Thêm vào giỏ hàng
                                    <div class="d-flex justify-content-center" id="sizeContainer_@item.ClothesItem.ClothesID">
                                        @foreach (var size in item.Sizes)
                                        {
                                            var specificImages = (List<ClothesStore.Models.Clothes_Color_Size>)item.Clothes_Color_Sizes;
                                            var colorID = specificImages.FirstOrDefault(clo => clo.SizeID == size.SizeID)?.ColorID;

                                            <div class="btn bg-white m-2 size-option" data-color="@colorID">
                                                @size.SizeName
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="card-footer border-0 p-0">
                                <div class="d-flex flex-row mt-3 mb-2">
                                    @foreach (var color in item.Colors)
                                    {
                                        var specificImages = (List<ClothesStore.Models.Image>)item.Images;
                                        var imgUrl = specificImages.FirstOrDefault(img => img.ColorID == color.ColorID)?.UrlMainImg;
                                        var imageWithOrderOne = specificImages.FirstOrDefault(img => img.ColorID == color.ColorID && img.ImageOrder == 1);
                                        <div class="me-2">
                                            <input type="radio" class="btn-check" name="color_@item.ClothesItem.ClothesID" id="@color.ColorID"
                                                   autocomplete="off" onclick="changeImageAndSizes(this, '@item.ClothesItem.ClothesID')" data-color-id="@color.ColorID"
                                                   data-img-url="@imgUrl"
                                                   @(imageWithOrderOne != null ? "checked" : "")>
                                            <label class="btn rounded-circle d-flex justify-content-center align-items-center" for="@color.ColorID" style="width: 20px; height: 25px;">
                                                <img src="@color.UrlImage" alt="" class="rounded-circle" style="width: 20px; height: 20px;">
                                            </label>
                                        </div>
                                    }
                                </div>
                                <div class="mb-2">
                                    <a class="#" href="#">
                                        <p class="card-text">@item.ClothesItem.ClothesName</p>
                                    </a>
                                </div>
                                <div class="mb-2">
                                    <span><strong>@item.ClothesItem.Price đ</strong></span>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<script>
    function GetClothesCate(categoryID, clothingTypeID) {
        $.ajax({
            url: '@Url.Action("GetClothesCate", "Clothes")', // URL to call
            type: 'GET',
            data: { idCate: categoryID, idType: clothingTypeID }, // Pass the clothing style ID
            success: function (result) {
                // Load the returned HTML into the container
                $('#clothesCate').html(result);
            },
            error: function () {
                alert("An error occurred while loading the clothes.");
            }
        });
    }
    function GetClothesAll(clothingTypeID) {
        $.ajax({
            url: '@Url.Action("GetClothesByCateAll", "Clothes")', // URL to call
            type: 'GET',
            data: { idType: clothingTypeID }, // Pass the clothing style ID
            success: function (result) {
                // Load the returned HTML into the container
                $('#clothesCate').html(result);
            },
            error: function () {
                alert("An error occurred while loading the clothes.");
            }
        });
    }
</script>